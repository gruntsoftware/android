# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  android: circleci/android@3.0.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  unit-test:
    executor:
      name: android/android_docker
      resource_class: large
      tag: 2024.07.1-ndk
    steps:
      - checkout
      - run:
          name: "brainwallet-android unit test setup..."
          command: "echo Building tests for brainwallet-android! && ls"
      - run:
          name: "Create google-services.json from env"
          command: |
            mkdir -p app
            echo "$GOOGLE_SERVICES_JSON" | base64 --decode > app/google-services.json
            ls -la app/google-services.json
      - run:
          name: "Create keystore files from env"
          command: |
            echo "$DEBUG_STORE_FILE" | base64 --decode > debug.keystore
            echo "$RELEASE_STORE_FILE" | base64 --decode > release.keystore
            ls -la *.keystore
      - run:
          name: "Create local.properties file"
          command: |
            cat > local.properties << EOL
            #adjust with your location
            DEBUG_STORE_FILE=${CIRCLE_WORKING_DIRECTORY}/debug.keystore
            DEBUG_STORE_PASSWORD=${DEBUG_STORE_PASSWORD}
            DEBUG_KEY_ALIAS=${DEBUG_KEY_ALIAS}
            DEBUG_KEY_PASSWORD=${DEBUG_KEY_PASSWORD}

            #adjust with your location
            RELEASE_STORE_FILE=${CIRCLE_WORKING_DIRECTORY}/release.keystore
            RELEASE_STORE_PASSWORD=${RELEASE_STORE_PASSWORD}
            RELEASE_KEY_ALIAS=${RELEASE_KEY_ALIAS}
            RELEASE_KEY_PASSWORD=${RELEASE_KEY_PASSWORD}

            # screengrab paperkey
            SCREENGRAB_PAPERKEY=${SCREENGRAB_PAPERKEY}
            EOL
            ls && cat local.properties
      - run:
          name: "Initialize submodule"
          command: "git submodule init && git submodule update --init --recursive"
      - android/restore_gradle_cache
      - run:
          name: "Execute Unit Test"
          command: ./gradlew testBrainwalletDebugUnitTest
      - android/save_gradle_cache
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test-and-build:
    jobs:
      - unit-test      
